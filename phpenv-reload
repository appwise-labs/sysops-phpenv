#!/usr/bin/env bash

# fail on first error
set -euo pipefail

# make sure we have admin rights
if [[ $EUID > 0 ]]; then
    echo >&2 "Need admin rights"
    exit 1
fi

# make sure the domain argument is present
if [ $# -ne 1 ]; then
    echo >&2 "usage: phpenv-reload domain"
    exit 1;
elif [[ "$1" =~ [^0-9a-zA-Z_-] ]]; then
    echo "Domain may only contain alphanumerical characters (and the '_' and '-' characters)";
    exit 1;
fi

# the domain to reload
DOMAIN=${1,,}

# detect current and required PHP version
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
CURRENT_PHP_VERSION=$(${DIR}/phpenv-php-current-version "${DOMAIN}")
REQUIRED_PHP_VERSION=$(HOME="/home/www-${DOMAIN}" /opt/bin/phpenv/phpenv-php-required-version)

echo "Current PHP version: ${CURRENT_PHP_VERSION}"
echo "Required PHP version: ${REQUIRED_PHP_VERSION}"

# if required PHP version is current PHP version, we are done
if [ "${CURRENT_PHP_VERSION}" = "${REQUIRED_PHP_VERSION}" ]; then
    echo "Done: PHP version didn't change"
    exit 0;
fi

# move PHP-FPM configuration file to correct location
FPM_CONF_SRC="/etc/php/${CURRENT_PHP_VERSION}/fpm/pool.d/www-${DOMAIN}.conf"
FPM_CONF_DST="/etc/php/${REQUIRED_PHP_VERSION}/fpm/pool.d/www-${DOMAIN}.conf"
mv "${FPM_CONF_SRC}" "${FPM_CONF_DST}"

# update FPM configuration to create socket at correct path
sed -i -e "s/php${CURRENT_PHP_VERSION}-fpm/php${REQUIRED_PHP_VERSION}-fpm/g" "${FPM_CONF_DST}"
# update nginx configuration file to point to correct FPM socket
NGINX_CONF="/etc/nginx/sites-available/${DOMAIN}.conf"
sed -i -e "s/php${CURRENT_PHP_VERSION}-fpm/php${REQUIRED_PHP_VERSION}-fpm/g" "${NGINX_CONF}"

# reload nginx
nginx -t
systemctl reload nginx

# restart PHP FPM
systemctl restart "php${CURRENT_PHP_VERSION}-fpm"
systemctl restart "php${REQUIRED_PHP_VERSION}-fpm"

# reload supervisor
supervisorctl reload
